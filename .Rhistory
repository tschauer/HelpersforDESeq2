selection_color = rgb(0,0,0.9,1)
plot(density(res$log2FoldChange),
main = "",
xlab = x_label,
xlim = xlims,
ylim = ylims,
col = "darkgrey", lwd=2)
lines(density(res$log2FoldChange[res[selection_id_type][,1] %in% selection_ids]),
col = selection_color, lwd=2)
abline(v=0, col="grey32")
plotDens <- function(res,
selection_ids = NULL,
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-5,5),
ylims = c(0,1),
x_label = "log2FC"){
plot(density(res$log2FoldChange),
main = "",
xlab = x_label,
xlim = xlims,
ylim = ylims,
col = "darkgrey", lwd=2)
if(!(is.null(selection_ids))){
lines(density(res$log2FoldChange[res[selection_id_type][,1] %in% selection_ids]),
col = selection_color, lwd=2)
}
abline(v=0, col="grey32")
if(!(is.null(selection_label))){
legend("topleft", legend = c(selection_label), bg = "white",
col = c(selection_color), pch = 19, cex=1)
}
}
plotDens(res = res1,
selection_ids = c("roX1","roX2"),
selection_id_type = "symbol",
selection_color = rgb(0,0,0.9,1),
selection_label = NULL,
xlims = c(-5,5),
ylims = c(0,1),
x_label = "log2FC")
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = c("roX1","roX2"),
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-5,5),
ylims = c(0,1),
x_label = "log2FC")
library(HelpersforDESeq2)
devtools::build_vignettes()
library(HelpersforDESeq2)
devtools::build_vignettes()
knitr::opts_chunk$set(echo = TRUE)
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = c("roX1","roX2"),
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-5,5),
ylims = c(0,1),
x_label = "log2FC")
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
plotDens
devtools::build_vignettes()
library(HelpersforDESeq2)
plotDens
knitr::opts_chunk$set(echo = TRUE)
res1 <- read.delim("../data/res.HighMLE+ATP-HighMLE-ATP.txt", row.names = 1, stringsAsFactors = F)
head(res1)
library(rtracklayer)
gtf_anno <- import("../data/dmel-all-r6.17.gtf", format = "gtf")
gtf_anno
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = c("roX1","roX2"),
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-5,5),
ylims = c(0,1),
x_label = "log2FC")
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = c("roX1","roX2"),
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-5,5),
ylims = c(0,1),
x_label = "log2FC")
HelpersforDESeq2:::plotDens
snoRNA_snopy <- read.table("../data/snoRNA_snopy.txt", header = T, sep = "\t", stringsAsFactors = FALSE)
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == "H/ACA"],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-5,5),
ylims = c(0,1),
x_label = "log2FC")
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == "H/ACA"],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-6,6),
ylims = c(0,1),
x_label = "log2FC")
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == "H/ACA"],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-8,8),
ylims = c(0,1),
x_label = "log2FC")
snoRNA_snopy <- read.table("../data/snoRNA_snopy.txt", header = T, sep = "\t", stringsAsFactors = FALSE)
snoRNA_snopy <- read.table("../data/snoRNA_snopy.txt", header = T, sep = "\t", stringsAsFactors = FALSE)
library(rtracklayer)
gtf_anno <- import("../data/dmel-all-r6.17.gtf", format = "gtf")
gtf_anno
rm(list = "plotDens")
HelpersforDESeq2:::plotDens()
HelpersforDESeq2:::plotDens
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == "H/ACA"],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-8,8),
ylims = c(0,1),
x_label = "log2FC")
roxygenise()
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == "H/ACA"],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-8,8),
ylims = c(0,1),
x_label = "log2FC")
roxygenise()
library(HelpersforDESeq2)
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == "H/ACA"],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-8,8),
ylims = c(0,1),
x_label = "log2FC")
knitr::opts_chunk$set(echo = TRUE)
res1 <- read.delim("../data/res.HighMLE+ATP-HighMLE-ATP.txt", row.names = 1, stringsAsFactors = F)
head(res1)
library(rtracklayer)
gtf_anno <- import("../data/dmel-all-r6.17.gtf", format = "gtf")
gtf_anno
snoRNA_snopy <- read.table("../data/snoRNA_snopy.txt", header = T, sep = "\t", stringsAsFactors = FALSE)
library(HelpersforDESeq2)
plotDens(res = res1,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == "H/ACA"],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_label = NULL,
xlims = c(-8,8),
ylims = c(0,1),
x_label = "log2FC")
library(HelpersforDESeq2)
?plotDens
HelpersforDESeq2:::plotDens()
library(HelpersforDESeq2)
library(HelpersforDESeq2)
devtools::build_vignettes()
devtools::build_vignettes()
knitr::opts_chunk$set(echo = TRUE)
res_files <- file.path("../data/", list.files(pattern = "^res"))
res_files
res_files <- file.path("../data/", list.files(path = "../data/",pattern = "^res"))
res_files
system.file("extdata", "res.HighMLEpATP-HighMLEmATP.txt", package = "HelpersforDESeq2")
library(HelpersforDESeq2)
system.file("extdata", "res.HighMLEpATP-HighMLEmATP.txt", package = "HelpersforDESeq2")
system.file("extdata", , package = "HelpersforDESeq2")
system.file("extdata", package = "HelpersforDESeq2")
system.file("extdata/", package = "HelpersforDESeq2")
knitr::opts_chunk$set(echo = TRUE)
res_files <- file.path("../extdata/", list.files(path = "../extdata/",pattern = "^res"))
res_files
library(HelpersforDESeq2)
library(HelpersforDESeq2)
system.file("extdata", "res.HighMLEpATP-HighMLEmATP.txt", package = "HelpersforDESeq2")
system.file("extdata", "res.", package = "HelpersforDESeq2")
system.file("extdata", "res.*", package = "HelpersforDESeq2")
knitr::opts_chunk$set(echo = TRUE)
res_path <- system.file("extdata/", package = "HelpersforDESeq2")
res_files <- file.path(res_path, list.files(path = res_path,pattern = "^res"))
res_files
res_files
res_name <- gsub(".*res.","res.",ress)
res_dir <- system.file("extdata/", package = "HelpersforDESeq2")
res_files <- file.path(res_dir, list.files(path = res_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".*res.","res.", res_files[i])
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res")
head(get(res_names[1]))
gsub(".*res.","res.", res_files[i])
res_name
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
res_name
res_tmp
res_dir <- system.file("extdata/", package = "HelpersforDESeq2")
res_files <- file.path(res_dir, list.files(path = res_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res")
head(get(res_names[1]))
ls(pattern = "^res")
rm(list = ls())
res_dir <- system.file("extdata/", package = "HelpersforDESeq2")
res_files <- file.path(res_dir, list.files(path = res_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res")
res_names
res_names <- ls(pattern = "^res\\.")
res_names
head(get(res_names[1]))
res_names
res_name
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
res_files
res1 <- `res.HighMLEpATP-HighMLEmATP`
res2 <- `res.LowMLE+ATP-LowMLEmATP`
res_merged <- merge(res1, res2, by = "row.names")
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
library(HelpersforDESeq2)
res1 = res_names[1]
res2 = res_names[2]
res1
get(res1)
library(HelpersforDESeq2)
par(mfrow=c(2,2))
res1 = res_names[1]
res2 = res_names[2]
for(tx_type in c("H/ACA", "C/D")){
plotLog2FC(res1 = get(res1),
res2 = get(res2),
main_title = "",
x_label = paste("log2FC \n", res1),
y_label = paste("log2FC \n", res2),
lims = c(-5,5),
point_size = 0.25,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_point_size = 0.5,
selection_legend = NULL,
selection_text_label = FALSE)
}
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
data_dir <- system.file("extdata/", package = "HelpersforDESeq2")
library(rtracklayer)
#gtf_anno <- import(file.path(data_dir, "dmel-all-r6.17.gtf"), format = "gtf")
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
head(get(res_names[1]))
snoRNA_snopy <- read.table(file.path(data_dir, "snoRNA_snopy.txt"), header = T, sep = "\t", stringsAsFactors = FALSE)
library(HelpersforDESeq2)
par(mfrow=c(2,2))
for(res_name in res_names){
for(tx_type in c("H/ACA", "C/D")){
plotDens(res = get(res_name),
main_title = gsub("res.","",res_name),
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_legend = tx_type,
xlims = c(-8,8),
ylims = c(0,1),
x_label = "log2FC")
}
}
library(HelpersforDESeq2)
par(mfrow=c(2,2))
res1 = res_names[1]
res2 = res_names[2]
for(tx_type in c("H/ACA", "C/D")){
plotLog2FC(res1 = get(res1),
res2 = get(res2),
main_title = "",
x_label = paste("log2FC \n", res1),
y_label = paste("log2FC \n", res2),
lims = c(-5,5),
point_size = 0.25,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_point_size = 0.5,
selection_legend = NULL,
selection_text_label = FALSE)
}
library(HelpersforDESeq2)
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
knitr::opts_chunk$set(echo = TRUE)
library(HelpersforDESeq2)
par(mfrow=c(2,2))
res1 = res_names[1]
res2 = res_names[2]
for(tx_type in c("H/ACA", "C/D")){
plotLog2FC(res1 = get(res1),
res2 = get(res2),
main_title = "",
x_label = paste("log2FC \n", res1),
y_label = paste("log2FC \n", res2),
lims = c(-5,5),
point_size = 0.25,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_point_size = 0.5,
selection_legend = NULL,
selection_text_label = FALSE)
}
res_merged
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
par(mfrow=c(2,2))
res1 = res_names[1]
res2 = res_names[2]
for(tx_type in c("H/ACA", "C/D")){
plotLog2FC(res1 = get(res1),
res2 = get(res2),
main_title = "",
x_label = paste("log2FC \n", res1),
y_label = paste("log2FC \n", res2),
lims = c(-5,5),
point_size = 0.25,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_point_size = 0.5,
selection_legend = NULL,
selection_text_label = FALSE)
}
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
library(HelpersforDESeq2)
par(mfrow=c(2,2))
res1 = res_names[1]
res2 = res_names[2]
for(tx_type in c("H/ACA", "C/D")){
plotLog2FC(res1 = get(res1),
res2 = get(res2),
main_title = "",
x_label = paste("log2FC \n", res1),
y_label = paste("log2FC \n", res2),
lims = c(-5,5),
point_size = 0.25,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_point_size = 0.5,
selection_legend = NULL,
selection_text_label = FALSE)
}
knitr::opts_chunk$set(echo = TRUE)
for(tx_type in c("H/ACA", "C/D")){
plotLog2FC(res1 = get(res1),
res2 = get(res2),
main_title = "",
x_label = paste("log2FC \n", res1),
y_label = paste("log2FC \n", res2),
lims = c(-5,5),
point_size = 0.25,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_point_size = 0.5,
selection_legend = NULL,
selection_text_label = FALSE)
}
library(HelpersforDESeq2)
par(mfrow=c(1,2), mar = c(5,5,1,1))
res1 = res_names[1]
res2 = res_names[2]
for(tx_type in c("H/ACA", "C/D")){
plotLog2FC(res1 = get(res1),
res2 = get(res2),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1)),
y_label = paste("log2FC \n", gsub("res.","",res2)),
lims = c(-6,6),
point_size = 0.25,
selection_ids = snoRNA_snopy$snoRNA.name[snoRNA_snopy$Box == tx_type],
selection_id_type = "symbol",
selection_color = rgb(0.7,0,0.9,1),
selection_point_size = 0.5,
selection_legend = tx_type,
selection_text_label = FALSE)
}
rgb(0.9,0.6,0,1)
255*c(0.9,0.6,0,1)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
head(`res.HighMLEpATP-HighMLEmATP`)
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
head(res_names)
head(get(res_names[1]))
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
head(res_names)
head(get(res_names[1]))
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
head(res_names)
head(get(res_names[1]))
get(res_names[1])
get(res_names[1])$symbol
get(res_names[1])$symbol[get(res_names[1])$chr = "MT"]
get(res_names[1])$symbol[get(res_names[1])$chr == "MT"]
get(res_names[1])$symbol[get(res_names[1])$chr %in% c("MT")]
res_names
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
head(res_names)
head(get(res_names[1]))
res_files
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
head(res_names)
rm(list = ls(pattern = "res"))
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res"))
for(i in seq_along(res_files)){
res_name <- gsub(".txt","",gsub(".*res.","res.", res_files[i]))
res_tmp <- read.delim(res_files[i], row.names = 1, stringsAsFactors = F)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
head(res_names)
head(get(res_names[1]))
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
?seq
