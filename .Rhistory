anno_id = "gene_id")
head(res2)
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
sum(res2$padj < 0.01)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-6,6),
point_size = 0.25,
selection_ids = res2$gene_symbol[res2$padj < 0.01,],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
res2$gene_symbol[res2$padj < 0.01,]
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-6,6),
point_size = 0.25,
selection_ids = res2$gene_symbol[res2$padj < 0.01],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
View(res2)
View(as.data.frame(res2))
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.25,
selection_ids = res2$gene_symbol[res2$padj < 0.01],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.25,
selection_ids = res2$gene_symbol[res2$padj < 0.01 & res2$log2FoldChange > 1],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.25,
selection_ids = res2$gene_symbol[res2$padj < 0.01 & res2$log2FoldChange < -1],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.5,
selection_ids = res2$gene_symbol[res2$padj < 0.01 & res2$log2FoldChange < -1],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.5,
selection_ids = res2$gene_symbol[res2$padj < 0.01 & res2$log2FoldChange < -1.5],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
SampleTable2 <- SampleTable[grep("ATP",SampleTable$Condition),]
SampleTable2$ATP <- factor(as.integer(grepl("pATP", SampleTable2$Condition)))
SampleTable2$MLE <- factor(as.integer(grepl("High", SampleTable2$Condition)))
kable(SampleTable2, row.names = F)
read.counts.genes.2 <- read.counts.genes[,colnames(read.counts.genes) %in% SampleTable2$ID]
if(identical(colnames(read.counts.genes.2), SampleTable2$ID)){
dds2 <- setupDDSwithInteraction(CountTableName = "read.counts.genes.2",
SampleTableName = "SampleTable2",
SampleIdName = "ID",
FactorAName = "ATP",
FactorBName = "MLE",
BatchName = "Batch",
n_samples_for_filtering = ncol(read.counts.genes.2)*0.75,
min_number_of_reads = 1)
}
dds2
resultsNames(dds2)
res2 <- getResults(dds = dds2,
result_name = "FactorA1.FactorB1",
lfc_cutoff = 0,
annotation = "gtf",
anno_symbol = "gene_symbol",
anno_id = "gene_id")
head(res2)
res1_name
res2_name
get(res1_name)
get(res2_name)
res_file_name
data_dir
assign(res_name, res)
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.5,
selection_ids = res2$gene_symbol[res2$padj < 0.01 & res2$log2FoldChange < -2],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(HelpersforDESeq2)
data_dir <- system.file("extdata/", package = "HelpersforDESeq2")
library(rtracklayer)
# Annotation rda file was generated from the gtf annotation
# gtf <- import("dmel-all-r6.17.gtf")
# save(gtf, file = "dmel-all-r6.17.rda")
load(file.path(data_dir, "dmel-all-r6.17.rda"))
gtf[1:5,1:8]
SampleTable <- read.table(file.path(data_dir, "SampleTable.txt"),
header = T, sep = "\t", stringsAsFactors = FALSE)
SampleTable <- SampleTable[order(SampleTable$ID),]
kable(SampleTable, row.names = F)
count_files <- file.path(data_dir, list.files(path = data_dir, pattern = "ReadsPerGene"))
count_names <- gsub(".*\\/|_[G,A,T,C].*","", count_files)
if(identical(count_names, SampleTable$ID)){
read.counts <-  makeCountTable(count_names = count_names,
count_files = count_files,
stranded = TRUE)
}
save(read.counts, file = paste0(data_dir, "read.counts.rda"))
kable(read.counts[1:10,1:6])
library(DESeq2)
read.counts.genes <- read.counts[-1:-4,]
if(identical(colnames(read.counts), SampleTable$ID)){
dds <- setupDDS(CountTableName = "read.counts.genes",
SampleTableName = "SampleTable",
SampleIdName = "ID",
ConditionName = "Condition",
BatchName = "Batch",
n_samples_for_filtering = ncol(read.counts.genes)*0.75,
min_number_of_reads = 1)
}
save(dds, file = paste0(data_dir, "dds.rda"))
dds
contrast_list <- list(c("HighMLEpATP", "Input"),
c("LowMLEpATP",  "Input"),
c("HighMLEpATP", "HighMLEmATP"),
c("LowMLEpATP", "LowMLEmATP"))
for(contrast_name in contrast_list){
res <- getResults(dds = dds,
contrast = contrast_name,
lfc_cutoff = 0,
shrink = FALSE,
annotation = "gtf",
anno_symbol = "gene_symbol",
anno_id = "gene_id")
res_name <- paste0("res.", contrast_name[1],"-",contrast_name[2])
assign(res_name, res)
write.table(res, file = paste0(data_dir, res_name, ".txt"),
quote = F, sep = "\t", row.names = T, col.names = NA)
}
head(res)
SampleTable2 <- SampleTable[grep("ATP",SampleTable$Condition),]
SampleTable2$ATP <- factor(as.integer(grepl("pATP", SampleTable2$Condition)))
SampleTable2$MLE <- factor(as.integer(grepl("High", SampleTable2$Condition)))
kable(SampleTable2, row.names = F)
read.counts.genes.2 <- read.counts.genes[,colnames(read.counts.genes) %in% SampleTable2$ID]
if(identical(colnames(read.counts.genes.2), SampleTable2$ID)){
dds2 <- setupDDSwithInteraction(CountTableName = "read.counts.genes.2",
SampleTableName = "SampleTable2",
SampleIdName = "ID",
FactorAName = "ATP",
FactorBName = "MLE",
BatchName = "Batch",
n_samples_for_filtering = ncol(read.counts.genes.2)*0.75,
min_number_of_reads = 1)
}
dds2
resultsNames(dds2)
res2 <- getResults(dds = dds2,
result_name = "FactorA1.FactorB1",
lfc_cutoff = 0,
annotation = "gtf",
anno_symbol = "gene_symbol",
anno_id = "gene_id")
head(res2)
par(mfrow=c(2,2), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.5,
selection_ids = res2$gene_symbol[res2$padj < 0.01 & res2$log2FoldChange < -2],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
SampleTable2$MLE
SampleTable2
SampleTable2 <- SampleTable[grep("ATP",SampleTable$Condition),]
SampleTable2$ATP <- factor(as.integer(grepl("mATP", SampleTable2$Condition)))
SampleTable2$MLE <- factor(as.integer(grepl("High", SampleTable2$Condition)))
kable(SampleTable2, row.names = F)
read.counts.genes.2 <- read.counts.genes[,colnames(read.counts.genes) %in% SampleTable2$ID]
if(identical(colnames(read.counts.genes.2), SampleTable2$ID)){
ddsI <- setupDDSwithInteraction(CountTableName = "read.counts.genes.2",
SampleTableName = "SampleTable2",
SampleIdName = "ID",
FactorAName = "ATP",
FactorBName = "MLE",
BatchName = "Batch",
n_samples_for_filtering = ncol(read.counts.genes.2)*0.75,
min_number_of_reads = 1)
}
ddsI
resultsNames(ddsI)
resI <- getResults(dds = ddsI,
result_name = "FactorA1.FactorB1",
lfc_cutoff = 0,
annotation = "gtf",
anno_symbol = "gene_symbol",
anno_id = "gene_id")
head(resI)
head(resI[order(resI$log2FoldChange, decreasing = F)])
head(resI[order(resI$log2FoldChange, decreasing = F),])
head(resI[order(resI$log2FoldChange, decreasing = F),], 20)
head(resI[order(resI$log2FoldChange, decreasing = F),], 1:20)
head(as.data.frame(resI[order(resI$log2FoldChange, decreasing = F),]), 20)
par(mfrow=c(1,1), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.5,
selection_ids = resI$gene_symbol[resI$padj < 0.05 & abs(resI$log2FoldChange) > 2],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1.5,
selection_legend = NULL,
selection_text_label = TRUE)
abs(resI$log2FoldChange)
par(mfrow=c(1,1), mar = c(5,5,1,1), oma = c(1,1,1,1), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.5,
selection_ids = resI$gene_symbol[resI$padj < 0.1 & abs(resI$log2FoldChange) > 2],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1.5,
selection_legend = NULL,
selection_text_label = TRUE)
head(as.data.frame(resI[order(resI$log2FoldChange, decreasing = F),]), 20)
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
par(mfrow=c(1,1), mar = c(5,5,1,1), oma = c(3,3,3,3), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-5,10),
point_size = 0.33,
selection_ids = resI$gene_symbol[resI$padj < 0.1 & abs(resI$log2FoldChange) > 2],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
par(mfrow=c(1,1), mar = c(5,5,1,1), oma = c(3,3,3,3), mgp = c(3,1,0))
res1_name = "res.HighMLEpATP-HighMLEmATP"
res2_name = "res.LowMLEpATP-LowMLEmATP"
plotLog2FC(res1 = get(res1_name),
res2 = get(res2_name),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res1_name)),
y_label = paste("log2FC \n", gsub("res.","",res2_name)),
lims = c(-10,10),
point_size = 0.33,
selection_ids = resI$gene_symbol[resI$padj < 0.1 & abs(resI$log2FoldChange) > 2],
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
```{r}
library(HelpersforDESeq2)
data_dir <- system.file("extdata/", package = "HelpersforDESeq2")
res_files <- file.path(data_dir, list.files(path = data_dir, pattern = "^res\\."))
res_files
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
data_dir <- system.file("extdata/", package = "HelpersforDESeq2")
res1 <- read.delim(paste0(data_dir, "res.HighMLEpATP-HighMLEmATP.txt"), row.names = 1, stringsAsFactors = F)
res2 <- read.delim(paste0(data_dir, "res.LowMLEpATP-LowMLEmATP.txt"), row.names = 1, stringsAsFactors = F)
res1$log10baseMean <- log10(res1$baseMean+1)
res2$log10baseMean <- log10(res2$baseMean+1)
head(res1)
plottingMA(res = res,
main_title = gsub("res.","",res_name),
selection_ids = c("roX1","roX2"),
selection_id_type = "gene_symbol",
selection_point_size = 1,
selection_text_label = TRUE,
selection_shadow = FALSE,
xlims = c(0, 6),
ylims = c(-10,10),
x_axis_by = 2,
padj_cutoff = 0.01,
show_legend = TRUE)
res$log10baseMean <- log10(res$baseMean+1)
plot(x = res$log10baseMean,
y = res$log2FoldChange,
xlab = "log10 mean counts",
ylab = "log2 fold change",
xlim = xlims,
ylim = ylims,
col = rgb(0,0,0,0.1), pch=19, cex = 0.25,
xaxt="n")
ylims = c(-5,5)
xlims = c(0, 6)
plot(x = res$log10baseMean,
y = res$log2FoldChange,
xlab = "log10 mean counts",
ylab = "log2 fold change",
xlim = xlims,
ylim = ylims,
col = rgb(0,0,0,0.1), pch=19, cex = 0.25,
xaxt="n")
axis(side = 1, at = seq(from = xlims[1], to = xlims[2], by = x_axis_by))
padj_cutoff = 0.01
axis(side = 1, at = seq(from = xlims[1], to = xlims[2], by = x_axis_by))
res.sign <- res[res$padj < padj_cutoff,]
points(x = res.sign$log10baseMean,
y = res.sign$log2FoldChange,
col = rgb(0.8,0,0,0.5), pch = 19, cex = 0.25)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow=c(1,1), mar = c(4,4,2,2), oma = c(4,4,4,4), mgp = c(2,1,0))
plot(res$log10baseMean,
res$log2FoldChange)
res_merged <- merge(res1, res2, by = "row.names")
par(mfrow=c(1,1), mar = c(5,5,1,1), oma = c(4,4,4,4), mgp = c(3,1,0))
res_file_names <- c("res.HighMLEpATP-HighMLEmATP.txt", "res.LowMLEpATP-LowMLEmATP.txt")
for(res_file_name in res_file_names){
res_tmp <- read.delim(paste0(data_dir, res_file_name), row.names = 1, stringsAsFactors = F)
res_name <- gsub(".txt","", res_file_name)
assign(res_name, res_tmp)
}
res_names <- ls(pattern = "^res\\.")
res_names
plotLog2FC(res1 = get(res_names[1]),
res2 = get(res_names[2]),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res_names[1])),
y_label = paste("log2FC \n", gsub("res.","",res_names[2])),
lims = c(-6,6),
point_size = 0.25,
selection_ids = c("roX1","roX2"),
selection_id_type = "gene_symbol",
selection_color = rgb(0.9,0.6,0.2,1),
selection_point_size = 1,
selection_legend = NULL,
selection_text_label = TRUE)
library(HelpersforDESeq2)
library(HelpersforDESeq2)
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
library(HelpersforDESeq2)
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
library(HelpersforDESeq2)
roxygenise();      # Builds the help files
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
log10(100)
log10(101)
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
library(roxygen2); # Read in the roxygen2 R package
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
plotLog2FC(res1 = get(res_names[1]),
res2 = get(res_names[2]),
main_title = "",
x_label = paste("log2FC \n", gsub("res.","",res_names[1])),
y_label = paste("log2FC \n", gsub("res.","",res_names[2])),
lims = c(-6,6),
point_size = 0.25,
selection_ids = c("roX1","roX2"),
selection_id_type = "gene_symbol",
selection_point_size = 1,
selection_legend = "labeled",
selection_text_label = TRUE)
roxygenise();      # Builds the help files
roxygenise();      # Builds the help files
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
library(HelpersforDESeq2)
data_dir <- system.file("extdata/", package = "HelpersforDESeq2")
res1 <- read.delim(paste0(data_dir, "res.HighMLEpATP-HighMLEmATP.txt"), row.names = 1, stringsAsFactors = F)
library(HelpersforDESeq2)
knitr::opts_chunk$set(echo = TRUE)
library(HelpersforDESeq2)
data_dir <- system.file("extdata/", package = "HelpersforDESeq2")
res1 <- read.delim(paste0(data_dir, "res.HighMLEpATP-HighMLEmATP.txt"), row.names = 1, stringsAsFactors = F)
res2 <- read.delim(paste0(data_dir, "res.LowMLEpATP-LowMLEmATP.txt"), row.names = 1, stringsAsFactors = F)
res1$log10baseMean <- log10(res1$baseMean+1)
res2$log10baseMean <- log10(res2$baseMean+1)
head(res1)
head(res2)
